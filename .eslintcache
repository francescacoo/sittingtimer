[{"/Users/fplacido/Documents/react/timer/sitting_timer/src/reportWebVitals.js":"1","/Users/fplacido/Documents/react/timer/sitting_timer/src/App.js":"2","/Users/fplacido/Documents/react/timer/sitting_timer/src/components/Stopwatch.js":"3","/Users/fplacido/Documents/react/timer/sitting_timer/src/index.js":"4"},{"size":362,"mtime":1606217587096,"results":"5","hashOfConfig":"6"},{"size":346,"mtime":1606401406935,"results":"7","hashOfConfig":"6"},{"size":4838,"mtime":1606488349848,"results":"8","hashOfConfig":"6"},{"size":500,"mtime":1606393723655,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1srwqja",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fplacido/Documents/react/timer/sitting_timer/src/reportWebVitals.js",[],"/Users/fplacido/Documents/react/timer/sitting_timer/src/App.js",[],"/Users/fplacido/Documents/react/timer/sitting_timer/src/components/Stopwatch.js",["19"],"import React, { Component } from \"react\";\n\nimport \"../App.css\";\nwindow.onbeforeunload = () => {\n  localStorage.removeItem('mydata0');\n  localStorage.removeItem('mydata1');\n  localStorage.removeItem('mydata2');\n  localStorage.removeItem('mydata3');\n\n}\nclass Stopwatch extends Component {\n  newcounter=0;\n  state = {\n    timerOn: false,\n    timerStart: 0,\n    timerTime: 0,\n    counter:0,\n    selectedOption:'kneeling chair 1'\n\n  };\n\n  handleOptionChange = changeEvent => {\n    this.setState({\n      selectedOption: changeEvent.target.value\n    });\n  };\n\n  startTimer = () => {\n    this.setState({\n      timerOn: true,\n      timerTime: this.state.timerTime,\n      timerStart: Date.now() - this.state.timerTime,\n    });\n    this.timer = setInterval(() => {\n      this.setState({\n        timerTime: Date.now() - this.state.timerStart\n      });\n    }, 10);\n  };\n\n  stopTimer = () => {\n    this.setState({ timerOn: false });\n    clearInterval(this.timer);\n  };\n\n  saveSittingSession=() => {\n    const { timerTime } = this.state;\n    let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n\n    let newtime=hours+\":\"+minutes+\":\"+seconds+\":\"+centiseconds;\n    var data= this.state.selectedOption+\" time: \"+newtime;\n    var datavar=\"mydata\"+this.state.counter;\n    localStorage.setItem(datavar, data);\n  }\n\n  resetTimer = () => {\n    var mycounter = this.state.counter +1;\n    this.setState({\n      timerStart: 0,\n      timerTime: 0,\n      counter:mycounter\n    });\n   \n    this.saveSittingSession();\n\n\n  };\n\n  render() {\n    const { timerTime } = this.state;\n    let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n\n    var history1;\n    var history2;\n\n    const historysitting =[]\n    for (var i=0;  i<=this.state.counter;i++){\n      \n      history1=localStorage.getItem('mydata'+i);\n\n      historysitting.push(<li key={i}>{history1}</li>)\n    }\n    return (\n      <div className=\"Stopwatch\">        \n        <div className=\"history\">{historysitting}</div>\n\n        <div className=\"Stopwatch-header\">Stopwatch</div>\n        <div className=\"Stopwatch-display\">\n          {hours} : {minutes} : {seconds} : {centiseconds}\n        </div>\n       \n        <form>\n         \n\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"react-tips\"\n                value=\"kneeling chair 1\"\n                checked={this.state.selectedOption === \"kneeling chair 1\" || !this.state.selectedOption}\n                onChange={this.handleOptionChange}\n                className=\"form-check-input\"\n              />\n              Kneeling chair 1\n            </label>\n          </div>\n\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"react-tips\"\n                value=\"kneelingChair2\"\n                checked={this.state.selectedOption === \"kneelingChair2\"}\n                onChange={this.handleOptionChange}\n                className=\"form-check-input\"\n              />\n              Kneeling chair 2\n            </label>\n          </div>\n\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"react-tips\"\n                value=\"standing\"\n                checked={this.state.selectedOption === \"standing\"}\n                onChange={this.handleOptionChange}\n                className=\"form-check-input\"\n              />\n              standing\n            </label>\n          </div>\n\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"react-tips\"\n                value=\"moving\"\n                checked={this.state.selectedOption === \"moving\"}\n                onChange={this.handleOptionChange}\n                className=\"form-check-input\"\n              />\n              moving\n            </label>\n          </div>\n\n        </form>\n\n        <button onClick={this.startTimer}>Start</button>\n        <button onClick={this.stopTimer}>Stop</button>\n\n        {this.state.timerOn === false && this.state.timerTime > 0 && (\n\n        <button onClick={this.startTimer}>Resume</button>\n        )}\n\n        {this.state.timerOn === false && this.state.timerTime > 0 && (\n\n        <button onClick={this.resetTimer}>Reset</button>\n        )}\n      </div>\n      \n    );\n  }\n}\n\nexport default Stopwatch;","/Users/fplacido/Documents/react/timer/sitting_timer/src/index.js",[],{"ruleId":"20","severity":1,"message":"21","line":80,"column":9,"nodeType":"22","messageId":"23","endLine":80,"endColumn":17},"no-unused-vars","'history2' is defined but never used.","Identifier","unusedVar"]